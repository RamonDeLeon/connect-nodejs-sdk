/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */

const SquareConnect = require('../../src/index');
const {
  accounts,
  expect,
  assert,
  handleUnexpectedError,
  generateIdempotencyKey
} = require('../support/setup');

describe('V1EmployeesApi', function() {
  beforeEach(function() {
    const defaultClient = SquareConnect.ApiClient.instance;
    const oauth2 = defaultClient.authentications['oauth2'];
    // Some APIs do not work with sandbox. Replace `sandbox` with `production` for those test suites.
    oauth2.accessToken = accounts.sandbox.access_token;
    this.api  = new SquareConnect.V1EmployeesApi();
  });

  afterEach(function(){
  });

  describe('createEmployee', function() {
    it('should call createEmployee successfully', function(done) {
      //uncomment below and update the code to test createEmployee
      //instance.createEmployee(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('createEmployeeRole', function() {
    it('should call createEmployeeRole successfully', function(done) {
      //uncomment below and update the code to test createEmployeeRole
      //instance.createEmployeeRole(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('createTimecard', function() {
    it('should call createTimecard successfully', function(done) {
      //uncomment below and update the code to test createTimecard
      //instance.createTimecard(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('deleteTimecard', function() {
    it('should call deleteTimecard successfully', function(done) {
      //uncomment below and update the code to test deleteTimecard
      //instance.deleteTimecard(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('listCashDrawerShifts', function() {
    it('should call listCashDrawerShifts successfully', function(done) {
      //uncomment below and update the code to test listCashDrawerShifts
      //instance.listCashDrawerShifts(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('listEmployeeRoles', function() {
    it('should call listEmployeeRoles successfully', function(done) {
      //uncomment below and update the code to test listEmployeeRoles
      //instance.listEmployeeRoles(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('listEmployees', function() {
    it('should call listEmployees successfully', function(done) {
      //uncomment below and update the code to test listEmployees
      //instance.listEmployees(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('listTimecardEvents', function() {
    it('should call listTimecardEvents successfully', function(done) {
      //uncomment below and update the code to test listTimecardEvents
      //instance.listTimecardEvents(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('listTimecards', function() {
    it('should call listTimecards successfully', function(done) {
      //uncomment below and update the code to test listTimecards
      //instance.listTimecards(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('retrieveCashDrawerShift', function() {
    it('should call retrieveCashDrawerShift successfully', function(done) {
      //uncomment below and update the code to test retrieveCashDrawerShift
      //instance.retrieveCashDrawerShift(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('retrieveEmployee', function() {
    it('should call retrieveEmployee successfully', function(done) {
      //uncomment below and update the code to test retrieveEmployee
      //instance.retrieveEmployee(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('retrieveEmployeeRole', function() {
    it('should call retrieveEmployeeRole successfully', function(done) {
      //uncomment below and update the code to test retrieveEmployeeRole
      //instance.retrieveEmployeeRole(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('retrieveTimecard', function() {
    it('should call retrieveTimecard successfully', function(done) {
      //uncomment below and update the code to test retrieveTimecard
      //instance.retrieveTimecard(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('updateEmployee', function() {
    it('should call updateEmployee successfully', function(done) {
      //uncomment below and update the code to test updateEmployee
      //instance.updateEmployee(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('updateEmployeeRole', function() {
    it('should call updateEmployeeRole successfully', function(done) {
      //uncomment below and update the code to test updateEmployeeRole
      //instance.updateEmployeeRole(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('updateTimecard', function() {
    it('should call updateTimecard successfully', function(done) {
      //uncomment below and update the code to test updateTimecard
      //instance.updateTimecard(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
});

