/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */

const SquareConnect = require('../../src/index');
const {
  accounts,
  expect,
  assert,
  handleUnexpectedError,
  generateIdempotencyKey
} = require('../support/setup');

describe('V1ItemsApi', function() {
  beforeEach(function() {
    const defaultClient = SquareConnect.ApiClient.instance;
    const oauth2 = defaultClient.authentications['oauth2'];
    // Some APIs do not work with sandbox. Replace `sandbox` with `production` for those test suites.
    oauth2.accessToken = accounts.sandbox.access_token;
    this.api  = new SquareConnect.V1ItemsApi();
  });

  afterEach(function(){
  });

  describe('adjustInventory', function() {
    it('should call adjustInventory successfully', function(done) {
      //uncomment below and update the code to test adjustInventory
      //instance.adjustInventory(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('applyFee', function() {
    it('should call applyFee successfully', function(done) {
      //uncomment below and update the code to test applyFee
      //instance.applyFee(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('applyModifierList', function() {
    it('should call applyModifierList successfully', function(done) {
      //uncomment below and update the code to test applyModifierList
      //instance.applyModifierList(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('createCategory', function() {
    it('should call createCategory successfully', function(done) {
      //uncomment below and update the code to test createCategory
      //instance.createCategory(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('createDiscount', function() {
    it('should call createDiscount successfully', function(done) {
      //uncomment below and update the code to test createDiscount
      //instance.createDiscount(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('createFee', function() {
    it('should call createFee successfully', function(done) {
      //uncomment below and update the code to test createFee
      //instance.createFee(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('createItem', function() {
    it('should call createItem successfully', function(done) {
      //uncomment below and update the code to test createItem
      //instance.createItem(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('createModifierList', function() {
    it('should call createModifierList successfully', function(done) {
      //uncomment below and update the code to test createModifierList
      //instance.createModifierList(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('createModifierOption', function() {
    it('should call createModifierOption successfully', function(done) {
      //uncomment below and update the code to test createModifierOption
      //instance.createModifierOption(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('createPage', function() {
    it('should call createPage successfully', function(done) {
      //uncomment below and update the code to test createPage
      //instance.createPage(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('createVariation', function() {
    it('should call createVariation successfully', function(done) {
      //uncomment below and update the code to test createVariation
      //instance.createVariation(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('deleteCategory', function() {
    it('should call deleteCategory successfully', function(done) {
      //uncomment below and update the code to test deleteCategory
      //instance.deleteCategory(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('deleteDiscount', function() {
    it('should call deleteDiscount successfully', function(done) {
      //uncomment below and update the code to test deleteDiscount
      //instance.deleteDiscount(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('deleteFee', function() {
    it('should call deleteFee successfully', function(done) {
      //uncomment below and update the code to test deleteFee
      //instance.deleteFee(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('deleteItem', function() {
    it('should call deleteItem successfully', function(done) {
      //uncomment below and update the code to test deleteItem
      //instance.deleteItem(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('deleteModifierList', function() {
    it('should call deleteModifierList successfully', function(done) {
      //uncomment below and update the code to test deleteModifierList
      //instance.deleteModifierList(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('deleteModifierOption', function() {
    it('should call deleteModifierOption successfully', function(done) {
      //uncomment below and update the code to test deleteModifierOption
      //instance.deleteModifierOption(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('deletePage', function() {
    it('should call deletePage successfully', function(done) {
      //uncomment below and update the code to test deletePage
      //instance.deletePage(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('deletePageCell', function() {
    it('should call deletePageCell successfully', function(done) {
      //uncomment below and update the code to test deletePageCell
      //instance.deletePageCell(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('deleteVariation', function() {
    it('should call deleteVariation successfully', function(done) {
      //uncomment below and update the code to test deleteVariation
      //instance.deleteVariation(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('listCategories', function() {
    it('should call listCategories successfully', function(done) {
      //uncomment below and update the code to test listCategories
      //instance.listCategories(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('listDiscounts', function() {
    it('should call listDiscounts successfully', function(done) {
      //uncomment below and update the code to test listDiscounts
      //instance.listDiscounts(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('listFees', function() {
    it('should call listFees successfully', function(done) {
      //uncomment below and update the code to test listFees
      //instance.listFees(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('listInventory', function() {
    it('should call listInventory successfully', function(done) {
      //uncomment below and update the code to test listInventory
      //instance.listInventory(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('listItems', function() {
    it('should call listItems successfully', function(done) {
      //uncomment below and update the code to test listItems
      //instance.listItems(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('listModifierLists', function() {
    it('should call listModifierLists successfully', function(done) {
      //uncomment below and update the code to test listModifierLists
      //instance.listModifierLists(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('listPages', function() {
    it('should call listPages successfully', function(done) {
      //uncomment below and update the code to test listPages
      //instance.listPages(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('removeFee', function() {
    it('should call removeFee successfully', function(done) {
      //uncomment below and update the code to test removeFee
      //instance.removeFee(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('removeModifierList', function() {
    it('should call removeModifierList successfully', function(done) {
      //uncomment below and update the code to test removeModifierList
      //instance.removeModifierList(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('retrieveItem', function() {
    it('should call retrieveItem successfully', function(done) {
      //uncomment below and update the code to test retrieveItem
      //instance.retrieveItem(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('retrieveModifierList', function() {
    it('should call retrieveModifierList successfully', function(done) {
      //uncomment below and update the code to test retrieveModifierList
      //instance.retrieveModifierList(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('updateCategory', function() {
    it('should call updateCategory successfully', function(done) {
      //uncomment below and update the code to test updateCategory
      //instance.updateCategory(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('updateDiscount', function() {
    it('should call updateDiscount successfully', function(done) {
      //uncomment below and update the code to test updateDiscount
      //instance.updateDiscount(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('updateFee', function() {
    it('should call updateFee successfully', function(done) {
      //uncomment below and update the code to test updateFee
      //instance.updateFee(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('updateItem', function() {
    it('should call updateItem successfully', function(done) {
      //uncomment below and update the code to test updateItem
      //instance.updateItem(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('updateModifierList', function() {
    it('should call updateModifierList successfully', function(done) {
      //uncomment below and update the code to test updateModifierList
      //instance.updateModifierList(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('updateModifierOption', function() {
    it('should call updateModifierOption successfully', function(done) {
      //uncomment below and update the code to test updateModifierOption
      //instance.updateModifierOption(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('updatePage', function() {
    it('should call updatePage successfully', function(done) {
      //uncomment below and update the code to test updatePage
      //instance.updatePage(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('updatePageCell', function() {
    it('should call updatePageCell successfully', function(done) {
      //uncomment below and update the code to test updatePageCell
      //instance.updatePageCell(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('updateVariation', function() {
    it('should call updateVariation successfully', function(done) {
      //uncomment below and update the code to test updateVariation
      //instance.updateVariation(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
});

